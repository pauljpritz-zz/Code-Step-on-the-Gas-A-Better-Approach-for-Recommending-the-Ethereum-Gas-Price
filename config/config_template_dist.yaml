testing: False
# Denote the type of model you want: simple or distribution
type: 'distribution'
data:
#  eth_price_file: '/home/pjp18/Documents/marble_data/eth-prices.json'
  eth_price_file: '/home/pjp18/Documents/marble_data/eth-prices-ticks.csv'
  gas_price_file: '/home/pjp18/Documents/marble_data/gas-prices-with-txs-3months.jsonl.gz'
  features:
    - 'average_gas_price'
    - 'tx_count'
  nested_features:
    - max_price_tx: 'gas_price'
    - min_price_tx: 'gas_price'
  inc_transactions: False
  eth_price_features:
    - 'value'
    - 'date'
  lagged_cols:
    - average_gas_price
  start_date: '2020-01-08'
  end_date: '2020-01-13'
  window_size: 2
  y_len: 2
  sample_freq: 3
  train_prop: 0.8
  batch_size: 32
  y_cols:
    - 'average_gas_price'
    - 'min_price_tx'
  scaling:
    normalizer: minmax
    columns:
      - average_gas_price
      - average_gas_price_lagged
      - max_price_tx
      - min_price_tx
      - tx_count
      - value
      - mean
      - std_dev
  remove_outliers:
    - average_gas_price
    - max_price_tx
    - min_price_tx
    - mean
    - std_dev
    - value
model:
  hidden_size: 64
  input_size: 5
  num_layers: 2
  # pred_steps must match y_len
  pred_steps: 2
  dropout: 0.1
  linear_units: 512
training:
  optimizer:
    # pass in class available in torch.optim
    class: Adam
    args: {}
  num_epochs: 15
  learning_rate: 0.035
  log_path: '/home/pjp18/Documents/marble_logs/'
  show_plots: True
  save_model: False

