testing: False
# Denote the type of model you want: simple or distribution
type: 'simple'
data:
#  eth_price_file: '/home/pjp18/Documents/marble_data/eth-prices.json'
  eth_price_file: '/home/pjp18/Documents/marble_data/eth-prices-ticks.csv'
  gas_price_file: '/home/pjp18/Documents/marble_data/gas-prices-with-txs-3months.jsonl.gz'
  # cache_path: /some/path/to/cache/the/data.pkl
  features:
    - 'average_gas_price'
    - 'tx_count'
  nested_features:
    - max_price_tx: 'gas_price'
    - min_price_tx: 'gas_price'
  inc_transactions: False
  eth_price_features:
    - 'value'
    - 'date'
  lagged_cols:
    - average_gas_price
  start_date: '2019-11-15'
  end_date: '2019-11-30'
  window_size: 80
  y_len: 2
  sample_freq: 1
  train_prop: 0.7
  batch_size: 32
  y_cols:
    - 'average_gas_price'
#    - 'std_dev'
  scaling:
    normalizer: minmax
    columns:
      - average_gas_price
      - average_gas_price_lagged
      - max_price_tx
      - min_price_tx
      - tx_count
      - value
      - mean
      - std_dev
  remove_outliers:
    - average_gas_price
    - max_price_tx
    - min_price_tx
    - mean
    - std_dev
    - value
  # Set to False to disable resampling
  resample: 20T
model:
  hidden_size: 256
  input_size: 5
  num_layers: 2
  # pred_steps must match y_len
  pred_steps: 2
  dropout: 0.01
  linear_units: 512
training:
  optimizer:
    # pass in class available in torch.optim
    class: Adam
    args: {}
  num_epochs: 40
  learning_rate: 0.001
  log_path: '/home/pjp18/Documents/marble_logs/'
  show_plots: True
  save_model: False

evaluation:
  # the number of blocks to skip at the begining and at the end of the dataset
  # should be enough for the predictor to work and to leave time
  # for blocks to be included
  skip:
    start: 110
    end: 500
  predictor:
    # class: ClairvoyantPredictor
    # args:
    #   blocks_to_wait: 480
    #   # comment out to use any available gas price
    #   # see class documentation for more info
    #   max_stdevs: 0.5
    class: GethPredictor
    args:
      blocks_count: 20
      percentile: 60
  # a timestamp will be added to the filename
  output_basename: tmp/stats.json
